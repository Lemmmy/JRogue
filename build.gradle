buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
		jcenter()
	}

	dependencies {
		classpath "net.sf.proguard:proguard-gradle:5.3.2"
	}
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "application"

def jarName = "JRogue"
mainClassName = "jr.JRogue"
version = "alpha-0.3"

sourceCompatibility = 1.8

task createProperties(dependsOn: processResources) {
	if (new File("$buildDir/resources/main").exists()) {
		new File("$buildDir/resources/main/version.properties").withWriter { w ->
			Properties p = new Properties()
			p["version"] = project.version.toString()
			p["buildDate"] = new Date().toString()
			p.store w, null
		}
	}
}

classes {
	dependsOn createProperties
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

dependencies {
	compile group: "org.apache.logging.log4j", name: "log4j-api", version: "2.7"
	compile group: "org.apache.logging.log4j", name: "log4j-core", version: "2.7"

	compile group: "commons-cli", name: "commons-cli", version: "1.3.1"
	compile group: "org.apache.commons", name: "commons-lang3", version: "3.4"

	compile group: "com.github.alexeyr.pcg", name: "pcg", version: "0.9.1"
	compile group: "org.ini4j", name: "ini4j", version: "0.5.1"
	compile group: "org.json", name: "json", version: "20160810"
	compile group: "org.reflections", name: "reflections", version: "0.9.10"

	compile "com.badlogicgames.gdx:gdx:1.9.5"
	compile "com.badlogicgames.gdx:gdx-freetype:1.9.5"
	compile "com.badlogicgames.gdx:gdx-backend-lwjgl3:1.9.5"
	compile "com.badlogicgames.gdx:gdx-platform:1.9.5:natives-desktop"
	compile "com.badlogicgames.gdx:gdx-freetype-platform:1.9.5:natives-desktop"

	compile "ninja.leaping.configurate:configurate-hocon:3.1"

	compile "org.projectlombok:lombok:1.16.12"
}

task subJar(type: Jar) {
	baseName = jarName + "-deobf"
	destinationDir = file("$buildDir/tmp")

	manifest {
		attributes "Main-Class": mainClassName
	}

	with jar
}

task obfuscate(type: proguard.gradle.ProGuardTask, dependsOn: "subJar") {
	configuration "proguard.conf"

	injars "$buildDir/tmp/${jarName}-deobf-${version}.jar"
	outjars "$buildDir/tmp/${jarName}-obf-${version}.jar"

	libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
	libraryjars files(configurations.compile.collect())

	printmapping "proguard.map"
}

task fullDistBuild(type: Jar, dependsOn: "obfuscate") {
	baseName = jarName + "-full"

	from zipTree("$buildDir/tmp/${jarName}-obf-${version}.jar")
	files(configurations.compile.collect()).each { f ->
		from zipTree(f)
	}

	manifest {
		attributes "Main-Class": mainClassName
	}
}

javadoc {
	source = sourceSets.main.allJava
	title = "JRogue API Documentation"

	if (project.hasProperty("javadocDir")) {
		destinationDir = file(project.getProperty("javadocDir"));
	} else {
		destinationDir = file("docs/")
	}
}